version: '3'
services:

    flask:
        build:
            context: api
            dockerfile: Dockerfile
        container_name: euapi_flask
        image: euapi/flask-python:3.6
        ports:
            - "5000:5000"
        restart: unless-stopped
        environment:
            APP_ENV: "dev"
            APP_DEBUG: "True"
            APP_PORT: 5000
            MONGODB_PROPDB: rentalproperties
            MONGODB_USERNAME: mongoflask
            MONGODB_PASSWORD: mongoflaskpassword
            MONGODB_HOSTNAME: mongodb
        volumes:
            - ./api:/var/www
        depends_on:
            - mongodb
        networks:
            - frontend
            - backend
    mongodb:
        image: mongo:4.2.3
        container_name: euapi_mongodb
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongoroot
            MONGO_INITDB_ROOT_PASSWORD: mongorootpassword
            MONGODB_DATA_DIR: /data/db
            MONDODB_LOG_DIR: /dev/null
            MONGODB_PROPDB: rentalproperties
            MONGODB_USERNAME: mongoflask
            MONGODB_PASSWORD: mongoflaskpassword
        volumes:
            - ./mongo/persistent:/data/db
            - ./mongo/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
        networks:
            - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local